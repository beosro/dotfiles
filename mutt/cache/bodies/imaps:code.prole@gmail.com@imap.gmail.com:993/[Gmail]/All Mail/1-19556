Delivered-To: code.prole@gmail.com
Received: by 10.200.37.50 with SMTP id 47csp7304561qtm;
        Wed, 28 Feb 2018 22:16:00 -0800 (PST)
X-Google-Smtp-Source: AG47ELsEpNO32JqrEBqzOahgaf8W9QtD6t1yXkqlFdi4UNbrTbG+dTM66kIfLCIoF7g8GslevsVl
X-Received: by 10.129.102.131 with SMTP id a125mr382524ywc.166.1519884960494;
        Wed, 28 Feb 2018 22:16:00 -0800 (PST)
ARC-Seal: i=1; a=rsa-sha256; t=1519884960; cv=none;
        d=google.com; s=arc-20160816;
        b=QGZf3PlApl2wjVW7rl4Np6/UaBU5vGnX+IzMuIbSevTyfOdLc+5fqj7okrlIFDkMt4
         kTFlbUTgz4YdauowL4njV3kCc0cibmkn57Wv5i88Onu31aJnxukLJxL0AUi5QKA4Civ1
         41Mouh2nAiHGsSWrYSnhXgWRq0c8WTdoqyN9rBNJ6vuhTGiqFslcl36/zE8BU9jHfKS+
         ocgcdvIJrNrbEup+OVL88FHdZz48J1E5g0IwWzpZUVWzXLmHUQYz/kmqRgVofo69oeaE
         c3chdiP0XUXKEObFpqU3PYhLncwaR7D/7e0aAztTQnhMjx4YEh2c6bfgj3LPymXYlPKm
         SAQQ==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20160816;
        h=mime-version:list-unsubscribe:list-id:feedback-id:message-id:date
         :to:reply-to:from:subject:dkim-signature:dkim-signature
         :arc-authentication-results;
        bh=RL71HIvcrUWLSi0fwjNWbTxfTxj2gYp0w8bceLjEN4g=;
        b=cuoZdp+R4zrGfkKa8tx1CFI8DFNP/G8Ui94GZ4/HRNheDWPx637KFnYzd8o5mPbq5x
         mlrw8dh9Sc9XYyulWiLD64cnebcPZNCaSgJE0pNKVkWz8MRufOpzx0lEeBtaWY58Hjxj
         4857APlHvQYFXhpi0KK9r2emVHKFq0Llg+q2RlnC020qCB6CI8gQr3vLamp+SvYolONO
         CBwHnjI2s4JyfYnja5NPNT6FQOze4KS/nZX9PBQRR8Q1rSwDEnwmgAx2/bmD4EQq76w4
         JrzyjMcvRnhnQUjJAnC1IL/1QRtoCM+c6Rl3FxdFb7r/+3UD9CjKI5/WyzT14+F49n93
         BUeQ==
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@onelanday.co.uk header.s=k1 header.b=imW5fDNj;
       dkim=pass header.i=@gmail.mcsv.net header.s=k1 header.b=e+WQpa3K;
       spf=pass (google.com: domain of bounce-mc.us9_35713533.1470329-code.prole=gmail.com@mail209.sea81.mcsv.net designates 148.105.14.209 as permitted sender) smtp.mailfrom=bounce-mc.us9_35713533.1470329-code.prole=gmail.com@mail209.sea81.mcsv.net
Return-Path: <bounce-mc.us9_35713533.1470329-code.prole=gmail.com@mail209.sea81.mcsv.net>
Received: from mail209.sea81.mcsv.net (mail209.sea81.mcsv.net. [148.105.14.209])
        by mx.google.com with ESMTPS id 143si531825ywg.765.2018.02.28.22.15.59
        for <code.prole@gmail.com>
        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);
        Wed, 28 Feb 2018 22:16:00 -0800 (PST)
Received-SPF: pass (google.com: domain of bounce-mc.us9_35713533.1470329-code.prole=gmail.com@mail209.sea81.mcsv.net designates 148.105.14.209 as permitted sender) client-ip=148.105.14.209;
Authentication-Results: mx.google.com;
       dkim=pass header.i=@onelanday.co.uk header.s=k1 header.b=imW5fDNj;
       dkim=pass header.i=@gmail.mcsv.net header.s=k1 header.b=e+WQpa3K;
       spf=pass (google.com: domain of bounce-mc.us9_35713533.1470329-code.prole=gmail.com@mail209.sea81.mcsv.net designates 148.105.14.209 as permitted sender) smtp.mailfrom=bounce-mc.us9_35713533.1470329-code.prole=gmail.com@mail209.sea81.mcsv.net
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; s=k1; d=onelanday.co.uk;
 h=Subject:From:Reply-To:To:Date:Message-ID:List-ID:List-Unsubscribe:
 Content-Type:MIME-Version; i=the-morning-paper@onelanday.co.uk;
 bh=RL71HIvcrUWLSi0fwjNWbTxfTxj2gYp0w8bceLjEN4g=;
 b=imW5fDNj3ejTCfKzY6D4e7k5jW77pPutPOD2JU7bfph9oKNer+fAcRdr5czI/T9rFwdtD51LRrM2
   bdonzH8KhvRkYPsqxbwL0wggjQQhE9HMQvYbgfySfZaKsQEf/e4FcD4f7GYXV6OeeoSMLjmwyQuQ
   AWpVs5gyROsPwyYshQ8=
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; s=k1; d=gmail.mcsv.net;
 h=Subject:From:Reply-To:To:Date:Message-ID:Feedback-ID:List-ID:
 List-Unsubscribe:Content-Type:MIME-Version;
 bh=RL71HIvcrUWLSi0fwjNWbTxfTxj2gYp0w8bceLjEN4g=;
 b=e+WQpa3KroDlCCr22Hg5GwwGtEYoh8F7FrsMSQTIoVTmKt5BPERDH414cHHDOwh1Quulrjq4Kx7G
   QELP+PhKojSCb/6fshPaNKdmc4jXe/jMkgNrhKhPZMr0U1oWjpprl+Wb75r5cMmkAwKhx78FN3mP
   023odPLVna67PMKhERU=
Received: from (127.0.0.1) by mail209.sea81.mcsv.net id hiuda02ddl49 for <code.prole@gmail.com>; Thu, 1 Mar 2018 06:15:42 +0000 (envelope-from <bounce-mc.us9_35713533.1470329-code.prole=gmail.com@mail209.sea81.mcsv.net>)
Subject: =?utf-8?Q?The=20Morning=20Paper=3A=20Clay=20codes=20=2D=20moulding=20MDS=20codes=20to=20yield=20an=20MSR=20code?=
From: =?utf-8?Q?The=20Morning=20Paper?= <the-morning-paper@onelanday.co.uk>
Reply-To: =?utf-8?Q?The=20Morning=20Paper?= <the-morning-paper@onelanday.co.uk>
To: <code.prole@gmail.com>
Date: Thu, 1 Mar 2018 06:15:42 +0000
Message-ID: <4188b6afbe9e5d43111fef4d4.1c7444593b.20180301061500.23913f32f8.ce46cf40@mail209.sea81.mcsv.net>
X-Mailer: MailChimp Mailer - **CID23913f32f81c7444593b**
X-Campaign: mailchimp4188b6afbe9e5d43111fef4d4.23913f32f8
X-campaignid: mailchimp4188b6afbe9e5d43111fef4d4.23913f32f8
X-Report-Abuse: Please report abuse for this campaign here: http://www.mailchimp.com/abuse/abuse.phtml?u=4188b6afbe9e5d43111fef4d4&id=23913f32f8&e=1c7444593b
X-MC-User: 4188b6afbe9e5d43111fef4d4
Feedback-ID: 35713533:35713533.1470329:us9:mc
List-ID: 4188b6afbe9e5d43111fef4d4mc list <4188b6afbe9e5d43111fef4d4.597133.list-id.mcsv.net>
X-Accounttype: pd
List-Unsubscribe: <https://acolyer.us9.list-manage.com/unsubscribe?u=4188b6afbe9e5d43111fef4d4&id=de5773de0c&e=1c7444593b&c=23913f32f8>, <mailto:unsubscribe-mc.us9_4188b6afbe9e5d43111fef4d4.23913f32f8-1c7444593b@mailin.mcsv.net?subject=unsubscribe>
x-mcda: FALSE
Content-Type: multipart/alternative; boundary="_----------=_MCPart_280861319"
MIME-Version: 1.0

This is a multi-part message in MIME format

--_----------=_MCPart_280861319
Content-Type: text/plain; charset="utf-8"; format="fixed"
Content-Transfer-Encoding: quoted-printable



Clay codes offer a better way to keep redundant copies of information for=
 fault tolerance.
View this email in your browser (http://mailchi.mp/onelanday/the-morning-p=
aper-clay-codes-moulding-mds-codes-to-yield-an-msr-code?e=3D1c7444593b)
This paper write-up is also available online at The Morning Paper. (http:/=
/blog.acolyer.org/2018/03/01/clay-codes-moulding-mds-codes-to-yield-an-msr=
-code)


** the morning paper
------------------------------------------------------------


** Clay codes: moulding MDS codes to yield an MSR code
------------------------------------------------------------

Clay codes: moulding MDS codes to yield an MSR code (https://www.usenix.or=
g/conference/fast18/presentation/vajha) Vajha et al.=2C FAST=E2=80=9918

As we know=2C storage fails (or the nodes to which it is directly attached=
=2C which amounts to pretty much the same thing). Assuming we can detect t=
he failure=2C we need to recover from it. In order to be able to recover=
=2C we need to have redundant information stored outside of the failure zo=
ne. There are a number of factors to consider in any scheme=2C for example=
:
* What is the storage overhead? (E.g.=2C in a straightforward n=3D3 replic=
ation scheme=2C we need 3x the original storage!).
* How long does it take to recover missing data? (Reading from disk=2C tra=
nsferring over the network=2C imputing the missing bytes if using a coding=
 scheme).
* What resources does it consume during recovery? (E.g.=2C does it saturat=
e network bandwidth?)

In order to be failure tolerant=2C data centers have increasingly started=
 to adopt erasure codes in place of replication. A class of erasure codes=
 known as maximum distance separable (MDS) codes offer the same level of f=
ailure tolerance as replication codes with minimal storage overhead. For e=
xample=2C Facebook reported reduced storage overhead of 1.4x by using Reed=
-Solomon codes=2C a popular class of MDS codes=2C as opposed to the storag=
e overhead of 3x incurred in triple replication.

(See =E2=80=98f4: Facebook=E2=80=99s warm blob storage system (https://blo=
g.acolyer.org/2014/12/16/f4-facebooks-warm-blob-storage-system/) =2C=E2=80=
=99 and =E2=80=98A hitchhiker=E2=80=99s guide to fast and efficient data r=
econstruction in erasure coded data centers (https://blog.acolyer.org/2014=
/12/17/a-hitchhikers-guide-to-fast-and-efficient-data-reconstruction-in-er=
asure-coded-data-centers/) =E2=80=99).

A class of erasure codes known as minimum storage regenerating (MSR) codes=
 offer the advantaged of MDS codes=2C but with lesser repair bandwidth (th=
e Achilles=E2=80=99 heel of MDS). Until Ye and Barg (https://arxiv.org/abs=
/1605.08630) though=2C no-one had shown a theoretical construction of an M=
SR code meeting all the requirements of real-world systems.

This paper presents Clay codes that extend the theoretical construction pr=
esented in Ye and Barg=2C with practical considerations. We implement Clay=
 and make it available as open-source under LGPL.

Clay (Coupled Layer) codes have a number of properties that make them attr=
active:
* Low storage overhead
* Optimal repair bandwidth
* Optimal disk I/O
* Optimal sub-packetization level (we=E2=80=99ll look at what that is late=
r)
* Uniform repair performance of data and parity nodes
* Support for both single and multiple-node repairs=2C while permitting fa=
ster and more efficient repair.

A natural question to ask is if these impressive theoretical credentials o=
f the Clay code result in matching practical performance. We answer this q=
uestion in the affirmative here by studying the real-world performance of=
 the Clay code in at Ceph setting=2C with respect to network traffic for r=
epair=2C disk I/O during repair=2C repair time=2C and degraded I/O perform=
ance.

A Clay code with storage overhead 1.25x reduced repair network traffic=2C=
 disk read=2C and repair times by 2.9x=2C 3.4x=2C and 3x respectively. Cou=
ld we be about to see an industry shift towards adoption of Clay codes? Th=
e paper describes the integration into Ceph and the subsequent evaluation=
=2C but I=E2=80=99m going to focus my limited space here on trying to expl=
ain how Clay codes work. First=2C a little background on erasure codes=2C=
 MDS=2C and MSR.


** Erasure code preliminaries
------------------------------------------------------------

Erasure codes are an alternative to replication for ensuring failure toler=
ance in data storage. In an [n=2Ck] erasure-coded system=2C data pertaini=
ng to an object is first divided into k data chunk and then encoded to obt=
ain m =3D n-k parity chunks.

After encoding=2C the n coded chunks (data + parity) are stored on n disti=
nct nodes. In scalar codes one byte from each of the k data chunks is pick=
ed=2C and the k bytes are linearly combined in m different ways=2C to obta=
in m parity bytes. The resulting set of n =3D k + m bytes is called a code=
word.

In vector codes=2C instead of working with a single byte at a time from ea=
ch data chunk=2C we work with ordered collections of \alpha bytes. These c=
ollections are called superbytes. The superbytes are then linearly combine=
d as before to obtain m parity bytes. (So a scalar code is just a vector c=
ode with \alpha =3D 1 ).

If the number of bytes in a data chunk is L=2C then we will have N =3D L/\=
alpha codewords. The number of bytes=2C\alpha =2C within a superbyte is ca=
lled the sub-packetization level of the code. Operations are carried out i=
n parallel across multiple codewords. Especially when \alpha is large=2C i=
t becomes more efficient therefore to contiguously store the corresponding=
 bytes from different superbytes. In this way=2C each data chunk becomes p=
artitioned into \alpha subsets=2C called sub-chunks.

The sub-class of (n=2Ck) erasure codes=2C either scalar or vector=2C have=
 the property that they can recovery from the failure of any (n-k) nodes a=
re called MDS (maximum distance separable) codes. For a fixed k=2C these c=
odes have the smallest storage overhead n/k among any of the erasure codes=
 that can recover from a failure of a fixed number of n-k nodes.

Reed-Solomon encoding (https://en.m.wikipedia.org/wiki/Reed%E2%80%93Solomo=
n_error_correction) is a well-known example.

In general=2C MDS codes can generate a substantial amount of network traff=
ic during node repair operations. MSR (minimum storage regenerating) codes=
 are a subclass of vector-based MDS codes that have the smallest possible=
 repair bandwidth. To restore a failed node under MSR it is necessary to c=
ontact an arbitrarily chosen subset of d helper nodes (d is a design param=
eter between k and n-1). From each of these nodes=2C \beta =3D \alpha/(d-k=
+1) bytes need to be downloaded=2C where \alpha is again the sub-packetiza=
tion level of the MSR code.

=2E. the larger the number (n-k) of parity chunks=2C the greater the reducti=
on in repair traffic.


** Clay codes
------------------------------------------------------------

A Clay code is an MSR code with a number of desirable properties as outlin=
ed earlier. We=E2=80=99ll build up to the full Clay coding system in stage=
s. Consider a Clay code with parameters:
* (n =3D 4=2C k=3D2) : 4 nodes in total=2C of which 2 are data nodes and 2=
 are parity nodes
* d =3D 3 : we contact 3 helpers during repair
* (\alpha =3D 3=2C \beta =3D 2) : 4 bytes in a superbyte=2C 2 bytes requir=
ed to be downloaded from each of the helper nodes during repair.
* M =3D 8 : 8 data bytes in total in a codeword ( k \alpha )

Take the n =3D 4 nodes=2C and arrange them in a grid indexed by (x=2Cy) co=
ordinates. Given a single codeword=2C we could make nodes at (0=2C0) and (=
1=2C0) store data=2C and nodes at (0=2C1)=2C (1=2C1) store parity informat=
ion.

Now suppose we have four codewords. We could store 4 bytes on each node no=
w=2C giving an uncoupled code. Each layer still stores a single codeword=
=2C and the parameter z is used to index codewords. Visually it looks like=
 a data cube where the columns are superbytes and the layers are codewords=
:

Now we can begin to turn this uncoupled starting point into a coupled-laye=
r=2C or Clay=2C code. The first thing we need to do is identify nodes that=
 we=E2=80=99re going to pair=2C and nodes that we=E2=80=99ll leave unpaire=
d. There=E2=80=99s a fairly odd way of doing this (at least I don=E2=80=99=
t find it intuitive)=2C but let=E2=80=99s roll with it...
* Take the z values (0=2C1=2C2=2C3) and represent them in binary as the di=
gits z_0=2C z_1 (so e.g. z=3D2 will be 1=2C0)
* Take the (x=2Cy) coordinates of a node=2C and colour it red if x =3D z_y=
 (i.e.=2C use the value of y to index into the z digits=2C and check to se=
e whether the value you find there equals x).

Red nodes will be unpaired. Let p =3D (x=2Cy=2Cz) .

The Clay code associates a byte C(p) with each vertex p of the data cube j=
ust as does the uncoupled code U. The bytes U(p) and C(p) are related in a=
 simple manner. If p corresponds to an unpaired (and hence colored in red)=
 vertex=2C we simply set C(p) =3D U(p)...

The remaining nodes are paired off=2C based on shared y-values=2C becoming=
 companion vertices.

If (p=2Cp*) are a pair of companion vertices=2C p \neq p^* =2C U(p) =2C U^=
*(p) and C(p) =2C C^*(p) are related by the following pairwise forward tra=
nsform (PFT):

To go in the other direction=2C we can use a pairwise reverse transform (P=
RT):

Finally=2C given this setup=2C Clay encoding proceeds as follows:

Suppose we now have a node failure=2C losing the dotted column in figure 9=
 below:

To repair the node=2C only the two layers z =3D (1=2C0) and z =3D (1=2C1)=
 corresponding to the presence of the red dots within the dotted column ar=
e called upon for node repair. Thus each helper node contributes only 2 by=
tes=2C as opposed to 4 in an RS code=2C towards node repair and this expla=
ins the savings in repair bandwidth.

If there are multiple node failures (but no more than n-k)=2C decoding can=
 be carried out sequentially layer by layer to correct the erasure. Layers=
 are processed in increasing order of the number of missing red dots withi=
n a layer. See the following figure for a succinct explanation.


** The last word
------------------------------------------------------------

Clay codes can be constructed via a simple two-step process where one firs=
t stacks in layers=2C \alpha codewords=2C drawn from an MDS code; in the n=
ext step=2C elements from different layers are paired and transformed to y=
ield the Clay code. The same construction with minor modifications is show=
n to offer support for handling multiple erasures as well. It is our belie=
f that Clay codes are well-poised to make the leap from theory to practice=
=2E

See the full paper for details of the implementation in Ceph and the exper=
imental evaluation=2C which I didn=E2=80=99t have space to cover here.
http://twitter.com/intent/tweet?text=3DClay%20codes%3A%20moulding%20MDS%20=
codes%20to%20yield%20an%20MSR%20code: http%3A%2F%2Fblog.acolyer.org%2F2018=
%2F03%2F01%2Fclay-codes-moulding-mds-codes-to-yield-an-msr-code Tweet (htt=
p://twitter.com/intent/tweet?text=3DClay%20codes%3A%20moulding%20MDS%20cod=
es%20to%20yield%20an%20MSR%20code: http%3A%2F%2Fblog.acolyer.org%2F2018%2F=
03%2F01%2Fclay-codes-moulding-mds-codes-to-yield-an-msr-code)
This email was brought to you by #themorningpaper (http://blog.acolyer.org=
) : an interesting/influential/important paper from the world of CS every=
 weekday morning=2C as selected by Adrian Colyer

=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D
Copyright =C2=A9 2018 One L and a Y Ltd=2C All rights reserved.
 You are receiving this email because you opted into email delivery for yo=
ur copy of The Morning Paper.

Our mailing address is:
One L and a Y Ltd
Unit 5755
PO Box 6945
London=2C England W1A 6US
United Kingdom
** unsubscribe from this list (https://acolyer.us9.list-manage.com/unsubsc=
ribe?u=3D4188b6afbe9e5d43111fef4d4&id=3Dde5773de0c&e=3D1c7444593b&c=3D23913f=
32f8)
** update subscription preferences (https://acolyer.us9.list-manage.com/pr=
ofile?u=3D4188b6afbe9e5d43111fef4d4&id=3Dde5773de0c&e=3D1c7444593b)
--_----------=_MCPart_280861319
Content-Type: text/html; charset="utf-8"
Content-Transfer-Encoding: quoted-printable

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.or=
g/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns=3D"http://www.w3.org/1999/xhtml">
    <head>
    =09<!-- NAME: 1 COLUMN -->
        <meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3D=
UTF-8">
        <meta name=3D"viewport" content=3D"width=3Ddevice-width=2C initial=
-scale=3D1.0">
        <title>The Morning Paper: Clay codes - moulding MDS codes to yield=
 an MSR code</title>

    <style type=3D"text/css">
=09=09body=2C#bodyTable=2C#bodyCell{
=09=09=09height:100% !important;
=09=09=09margin:0;
=09=09=09padding:0;
=09=09=09width:100% !important;
=09=09}
=09=09table{
=09=09=09border-collapse:collapse;
=09=09}
=09=09img=2Ca img{
=09=09=09border:0;
=09=09=09outline:none;
=09=09=09text-decoration:none;
=09=09}
=09=09h1=2Ch2=2Ch3=2Ch4=2Ch5=2Ch6{
=09=09=09margin:0;
=09=09=09padding:0;
=09=09}
=09=09p{
=09=09=09margin:1em 0;
=09=09=09padding:0;
=09=09}
=09=09a{
=09=09=09word-wrap:break-word;
=09=09}
=09=09.mcnPreviewText{
=09=09=09display:none !important;
=09=09}
=09=09.ReadMsgBody{
=09=09=09width:100%;
=09=09}
=09=09.ExternalClass{
=09=09=09width:100%;
=09=09}
=09=09.ExternalClass=2C.ExternalClass p=2C.ExternalClass span=2C.ExternalC=
lass font=2C.ExternalClass td=2C.ExternalClass div{
=09=09=09line-height:100%;
=09=09}
=09=09table=2Ctd{
=09=09=09mso-table-lspace:0pt;
=09=09=09mso-table-rspace:0pt;
=09=09}
=09=09#outlook a{
=09=09=09padding:0;
=09=09}
=09=09img{
=09=09=09-ms-interpolation-mode:bicubic;
=09=09}
=09=09body=2Ctable=2Ctd=2Cp=2Ca=2Cli=2Cblockquote{
=09=09=09-ms-text-size-adjust:100%;
=09=09=09-webkit-text-size-adjust:100%;
=09=09}
=09=09#templatePreheader=2C#templateHeader=2C#templateBody=2C#templateFoot=
er{
=09=09=09min-width:100%;
=09=09}
=09=09#bodyCell{
=09=09=09padding:20px;
=09=09}
=09=09.mcnImage=2C.mcnRetinaImage{
=09=09=09vertical-align:bottom;
=09=09}
=09=09.mcnTextContent img{
=09=09=09height:auto !important;
=09=09}
=09=09body=2C#bodyTable{
=09=09=09background-color:#F2F2F2;
=09=09}
=09=09#bodyCell{
=09=09=09border-top:0;
=09=09}
=09=09#templateContainer{
=09=09=09border:0;
=09=09}
=09=09h1{
=09=09=09color:#606060 !important;
=09=09=09display:block;
=09=09=09font-family:Helvetica;
=09=09=09font-size:40px;
=09=09=09font-style:normal;
=09=09=09font-weight:bold;
=09=09=09line-height:125%;
=09=09=09letter-spacing:-1px;
=09=09=09margin:0;
=09=09=09text-align:left;
=09=09}
=09=09h2{
=09=09=09color:#404040 !important;
=09=09=09display:block;
=09=09=09font-family:Helvetica;
=09=09=09font-size:26px;
=09=09=09font-style:normal;
=09=09=09font-weight:bold;
=09=09=09line-height:125%;
=09=09=09letter-spacing:-.75px;
=09=09=09margin:0;
=09=09=09text-align:left;
=09=09}
=09=09h3{
=09=09=09color:#606060 !important;
=09=09=09display:block;
=09=09=09font-family:Helvetica;
=09=09=09font-size:18px;
=09=09=09font-style:normal;
=09=09=09font-weight:bold;
=09=09=09line-height:125%;
=09=09=09letter-spacing:-.5px;
=09=09=09margin:0;
=09=09=09text-align:left;
=09=09}
=09=09h4{
=09=09=09color:#808080 !important;
=09=09=09display:block;
=09=09=09font-family:Helvetica;
=09=09=09font-size:16px;
=09=09=09font-style:normal;
=09=09=09font-weight:bold;
=09=09=09line-height:125%;
=09=09=09letter-spacing:normal;
=09=09=09margin:0;
=09=09=09text-align:left;
=09=09}
=09=09#templatePreheader{
=09=09=09background-color:#FFFFFF;
=09=09=09border-top:0;
=09=09=09border-bottom:0;
=09=09}
=09=09.preheaderContainer .mcnTextContent=2C.preheaderContainer .mcnTextCo=
ntent p{
=09=09=09color:#606060;
=09=09=09font-family:Helvetica;
=09=09=09font-size:11px;
=09=09=09line-height:125%;
=09=09=09text-align:left;
=09=09}
=09=09.preheaderContainer .mcnTextContent a{
=09=09=09color:#606060;
=09=09=09font-weight:normal;
=09=09=09text-decoration:underline;
=09=09}
=09=09#templateHeader{
=09=09=09background-color:#FFFFFF;
=09=09=09border-top:0;
=09=09=09border-bottom:0;
=09=09}
=09=09.headerContainer .mcnTextContent=2C.headerContainer .mcnTextContent=
 p{
=09=09=09color:#606060;
=09=09=09font-family:Helvetica;
=09=09=09font-size:15px;
=09=09=09line-height:150%;
=09=09=09text-align:left;
=09=09}
=09=09.headerContainer .mcnTextContent a{
=09=09=09color:#6DC6DD;
=09=09=09font-weight:normal;
=09=09=09text-decoration:underline;
=09=09}
=09=09#templateBody{
=09=09=09background-color:#FFFFFF;
=09=09=09border-top:0;
=09=09=09border-bottom:0;
=09=09}
=09=09.bodyContainer .mcnTextContent=2C.bodyContainer .mcnTextContent p{
=09=09=09color:#606060;
=09=09=09font-family:Helvetica;
=09=09=09font-size:15px;
=09=09=09line-height:150%;
=09=09=09text-align:left;
=09=09}
=09=09.bodyContainer .mcnTextContent a{
=09=09=09color:#6DC6DD;
=09=09=09font-weight:normal;
=09=09=09text-decoration:underline;
=09=09}
=09=09#templateFooter{
=09=09=09background-color:#FFFFFF;
=09=09=09border-top:0;
=09=09=09border-bottom:0;
=09=09}
=09=09.footerContainer .mcnTextContent=2C.footerContainer .mcnTextContent=
 p{
=09=09=09color:#606060;
=09=09=09font-family:Helvetica;
=09=09=09font-size:11px;
=09=09=09line-height:125%;
=09=09=09text-align:left;
=09=09}
=09=09.footerContainer .mcnTextContent a{
=09=09=09color:#606060;
=09=09=09font-weight:normal;
=09=09=09text-decoration:underline;
=09=09}
=09@media only screen and (max-width: 480px){
=09=09body=2Ctable=2Ctd=2Cp=2Ca=2Cli=2Cblockquote{
=09=09=09-webkit-text-size-adjust:none !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09body{
=09=09=09width:100% !important;
=09=09=09min-width:100% !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09.mcnRetinaImage{
=09=09=09max-width:100% !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09td[id=3DbodyCell]{
=09=09=09padding:10px !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09table[class=3DmcnTextContentContainer]{
=09=09=09width:100% !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09.mcnBoxedTextContentContainer{
=09=09=09max-width:100% !important;
=09=09=09min-width:100% !important;
=09=09=09width:100% !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09table[class=3Dmcpreview-image-uploader]{
=09=09=09width:100% !important;
=09=09=09display:none !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09img[class=3DmcnImage]{
=09=09=09width:100% !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09table[class=3DmcnImageGroupContentContainer]{
=09=09=09width:100% !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09td[class=3DmcnImageGroupContent]{
=09=09=09padding:9px !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09td[class=3DmcnImageGroupBlockInner]{
=09=09=09padding-bottom:0 !important;
=09=09=09padding-top:0 !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09tbody[class=3DmcnImageGroupBlockOuter]{
=09=09=09padding-bottom:9px !important;
=09=09=09padding-top:9px !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09table[class=3DmcnCaptionTopContent]=2Ctable[class=3DmcnCaptionBott=
omContent]{
=09=09=09width:100% !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09table[class=3DmcnCaptionLeftTextContentContainer]=2Ctable[class=3D=
mcnCaptionRightTextContentContainer]=2Ctable[class=3DmcnCaptionLeftImageC=
ontentContainer]=2Ctable[class=3DmcnCaptionRightImageContentContainer]=2C=
table[class=3DmcnImageCardLeftTextContentContainer]=2Ctable[class=3DmcnI=
mageCardRightTextContentContainer]=2C.mcnImageCardLeftImageContentContaine=
r=2C.mcnImageCardRightImageContentContainer{
=09=09=09width:100% !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09td[class=3DmcnImageCardLeftImageContent]=2Ctd[class=3DmcnImageCard=
RightImageContent]{
=09=09=09padding-right:18px !important;
=09=09=09padding-left:18px !important;
=09=09=09padding-bottom:0 !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09td[class=3DmcnImageCardBottomImageContent]{
=09=09=09padding-bottom:9px !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09td[class=3DmcnImageCardTopImageContent]{
=09=09=09padding-top:18px !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09td[class=3DmcnImageCardLeftImageContent]=2Ctd[class=3DmcnImageCard=
RightImageContent]{
=09=09=09padding-right:18px !important;
=09=09=09padding-left:18px !important;
=09=09=09padding-bottom:0 !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09td[class=3DmcnImageCardBottomImageContent]{
=09=09=09padding-bottom:9px !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09td[class=3DmcnImageCardTopImageContent]{
=09=09=09padding-top:18px !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09table[class=3DmcnCaptionLeftContentOuter] td[class=3DmcnTextConten=
t]=2Ctable[class=3DmcnCaptionRightContentOuter] td[class=3DmcnTextConten=
t]{
=09=09=09padding-top:9px !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09td[class=3DmcnCaptionBlockInner] table[class=3DmcnCaptionTopConten=
t]:last-child td[class=3DmcnTextContent]=2C.mcnImageCardTopImageContent=
=2C.mcnCaptionBottomContent:last-child .mcnCaptionBottomImageContent{
=09=09=09padding-top:18px !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09td[class=3DmcnBoxedTextContentColumn]{
=09=09=09padding-left:18px !important;
=09=09=09padding-right:18px !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09td[class=3DmcnTextContent]{
=09=09=09padding-right:18px !important;
=09=09=09padding-left:18px !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09table[id=3DtemplateContainer]=2Ctable[id=3DtemplatePreheader]=2Cta=
ble[id=3DtemplateHeader]=2Ctable[id=3DtemplateBody]=2Ctable[id=3Dtempla=
teFooter]{
=09=09=09max-width:600px !important;
=09=09=09width:100% !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09h1{
=09=09=09font-size:24px !important;
=09=09=09line-height:125% !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09h2{
=09=09=09font-size:20px !important;
=09=09=09line-height:125% !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09h3{
=09=09=09font-size:18px !important;
=09=09=09line-height:125% !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09h4{
=09=09=09font-size:16px !important;
=09=09=09line-height:125% !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09table[class=3DmcnBoxedTextContentContainer] td[class=3DmcnTextCont=
ent]=2Ctd[class=3DmcnBoxedTextContentContainer] td[class=3DmcnTextConten=
t] p{
=09=09=09font-size:18px !important;
=09=09=09line-height:125% !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09table[id=3DtemplatePreheader]{
=09=09=09display:block !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09td[class=3DpreheaderContainer] td[class=3DmcnTextContent]=2Ctd[cl=
ass=3DpreheaderContainer] td[class=3DmcnTextContent] p{
=09=09=09font-size:14px !important;
=09=09=09line-height:115% !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09td[class=3DheaderContainer] td[class=3DmcnTextContent]=2Ctd[class=
=3DheaderContainer] td[class=3DmcnTextContent] p{
=09=09=09font-size:18px !important;
=09=09=09line-height:125% !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09td[class=3DbodyContainer] td[class=3DmcnTextContent]=2Ctd[class=
=3DbodyContainer] td[class=3DmcnTextContent] p{
=09=09=09font-size:18px !important;
=09=09=09line-height:125% !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09td[class=3DfooterContainer] td[class=3DmcnTextContent]=2Ctd[class=
=3DfooterContainer] td[class=3DmcnTextContent] p{
=09=09=09font-size:14px !important;
=09=09=09line-height:115% !important;
=09=09}

}=09@media only screen and (max-width: 480px){
=09=09td[class=3DfooterContainer] a[class=3DutilityLink]{
=09=09=09display:block !important;
=09=09}

}</style></head>
    <body leftmargin=3D"0" marginwidth=3D"0" topmargin=3D"0" marginheight=
=3D"0" offset=3D"0" style=3D"margin: 0;padding: 0;-ms-text-size-adjust: 10=
0%;-webkit-text-size-adjust: 100%;background-color: #F2F2F2;height: 100% !=
important;width: 100% !important;">
        <!--
-->
        <center>
            <table align=3D"center" border=3D"0" cellpadding=3D"0" cellspa=
cing=3D"0" height=3D"100%" width=3D"100%" id=3D"bodyTable" style=3D"border=
-collapse: collapse;mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-s=
ize-adjust: 100%;-webkit-text-size-adjust: 100%;margin: 0;padding: 0;backg=
round-color: #F2F2F2;height: 100% !important;width: 100% !important;">
                <tr>
                    <td align=3D"center" valign=3D"top" id=3D"bodyCell" st=
yle=3D"mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust: 1=
00%;-webkit-text-size-adjust: 100%;margin: 0;padding: 20px;border-top: 0;h=
eight: 100% !important;width: 100% !important;">
                        <!-- BEGIN TEMPLATE // -->
                        <table border=3D"0" cellpadding=3D"0" cellspacing=
=3D"0" width=3D"600" id=3D"templateContainer" style=3D"border-collapse: co=
llapse;mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust: 1=
00%;-webkit-text-size-adjust: 100%;border: 0;">
                            <tr>
                                <td align=3D"center" valign=3D"top" style=
=3D"mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust: 100%=
;-webkit-text-size-adjust: 100%;">
                                    <!-- BEGIN PREHEADER // -->
                                    <table border=3D"0" cellpadding=3D"0"=
 cellspacing=3D"0" width=3D"600" id=3D"templatePreheader" style=3D"border-=
collapse: collapse;mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-si=
ze-adjust: 100%;-webkit-text-size-adjust: 100%;min-width: 100%;background-=
color: #FFFFFF;border-top: 0;border-bottom: 0;">
                                        <tr>
                                        =09<td valign=3D"top" class=3D"pre=
headerContainer" style=3D"padding-top: 9px;mso-table-lspace: 0pt;mso-table=
-rspace: 0pt;-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;"><=
table border=3D"0" cellpadding=3D"0" cellspacing=3D"0" width=3D"100%" clas=
s=3D"mcnTextBlock" style=3D"min-width: 100%;border-collapse: collapse;mso-=
table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust: 100%;-webkit=
-text-size-adjust: 100%;">
    <tbody class=3D"mcnTextBlockOuter">
        <tr>
            <td valign=3D"top" class=3D"mcnTextBlockInner" style=3D"paddin=
g-top: 9px;mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjus=
t: 100%;-webkit-text-size-adjust: 100%;">
              =09<!--[if mso]>
=09=09=09=09<table align=3D"left" border=3D"0" cellspacing=3D"0" cellpaddi=
ng=3D"0" width=3D"100%" style=3D"width:100%;">
=09=09=09=09<tr>
=09=09=09=09<![endif]-->
=09=09=09
=09=09=09=09<!--[if mso]>
=09=09=09=09<td valign=3D"top" width=3D"390" style=3D"width:390px;">
=09=09=09=09<![endif]-->
                <table align=3D"left" border=3D"0" cellpadding=3D"0" cells=
pacing=3D"0" style=3D"max-width: 390px;border-collapse: collapse;mso-table=
-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust: 100%;-webkit-text=
-size-adjust: 100%;" width=3D"100%" class=3D"mcnTextContentContainer">
                    <tbody><tr>

                        <td valign=3D"top" class=3D"mcnTextContent" style=
=3D"padding-top: 0;padding-left: 18px;padding-bottom: 9px;padding-right: 1=
8px;mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust: 100%=
;-webkit-text-size-adjust: 100%;color: #606060;font-family: Helvetica;font=
-size: 11px;line-height: 125%;text-align: left;">

                            Clay codes offer a better way to keep redundan=
t copies of information for fault tolerance.
                        </td>
                    </tr>
                </tbody></table>
=09=09=09=09<!--[if mso]>
=09=09=09=09</td>
=09=09=09=09<![endif]-->

=09=09=09=09<!--[if mso]>
=09=09=09=09<td valign=3D"top" width=3D"210" style=3D"width:210px;">
=09=09=09=09<![endif]-->
                <table align=3D"left" border=3D"0" cellpadding=3D"0" cells=
pacing=3D"0" style=3D"max-width: 210px;border-collapse: collapse;mso-table=
-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust: 100%;-webkit-text=
-size-adjust: 100%;" width=3D"100%" class=3D"mcnTextContentContainer">
                    <tbody><tr>

                        <td valign=3D"top" class=3D"mcnTextContent" style=
=3D"padding-top: 0;padding-left: 18px;padding-bottom: 9px;padding-right: 1=
8px;mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust: 100%=
;-webkit-text-size-adjust: 100%;color: #606060;font-family: Helvetica;font=
-size: 11px;line-height: 125%;text-align: left;">

                            <a href=3D"http://mailchi.mp/onelanday/the-mor=
ning-paper-clay-codes-moulding-mds-codes-to-yield-an-msr-code?e=3D1c7444593b=
" target=3D"_blank" style=3D"word-wrap: break-word;-ms-text-size-adjust: 1=
00%;-webkit-text-size-adjust: 100%;color: #606060;font-weight: normal;text=
-decoration: underline;">View this email in your browser</a>
                        </td>
                    </tr>
                </tbody></table>
=09=09=09=09<!--[if mso]>
=09=09=09=09</td>
=09=09=09=09<![endif]-->

=09=09=09=09<!--[if mso]>
=09=09=09=09</tr>
=09=09=09=09</table>
=09=09=09=09<![endif]-->
            </td>
        </tr>
    </tbody>
</table></td>
                                        </tr>
                                    </table>
                                    <!-- // END PREHEADER -->
                                </td>
                            </tr>
                            <tr>
                                <td align=3D"center" valign=3D"top" style=
=3D"mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust: 100%=
;-webkit-text-size-adjust: 100%;">
                                    <!-- BEGIN HEADER // -->
                                    <table border=3D"0" cellpadding=3D"0"=
 cellspacing=3D"0" width=3D"600" id=3D"templateHeader" style=3D"border-col=
lapse: collapse;mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-=
adjust: 100%;-webkit-text-size-adjust: 100%;min-width: 100%;background-col=
or: #FFFFFF;border-top: 0;border-bottom: 0;">
                                        <tr>
                                            <td valign=3D"top" class=3D"he=
aderContainer" style=3D"mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-te=
xt-size-adjust: 100%;-webkit-text-size-adjust: 100%;"><table border=3D"0"=
 cellpadding=3D"0" cellspacing=3D"0" width=3D"100%" class=3D"mcnTextBlock"=
 style=3D"min-width: 100%;border-collapse: collapse;mso-table-lspace: 0pt;=
mso-table-rspace: 0pt;-ms-text-size-adjust: 100%;-webkit-text-size-adjust:=
 100%;">
    <tbody class=3D"mcnTextBlockOuter">
        <tr>
            <td valign=3D"top" class=3D"mcnTextBlockInner" style=3D"paddin=
g-top: 9px;mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjus=
t: 100%;-webkit-text-size-adjust: 100%;">
              =09<!--[if mso]>
=09=09=09=09<table align=3D"left" border=3D"0" cellspacing=3D"0" cellpaddi=
ng=3D"0" width=3D"100%" style=3D"width:100%;">
=09=09=09=09<tr>
=09=09=09=09<![endif]-->
=09=09=09
=09=09=09=09<!--[if mso]>
=09=09=09=09<td valign=3D"top" width=3D"600" style=3D"width:600px;">
=09=09=09=09<![endif]-->
                <table align=3D"left" border=3D"0" cellpadding=3D"0" cells=
pacing=3D"0" style=3D"max-width: 100%;min-width: 100%;border-collapse: col=
lapse;mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust: 10=
0%;-webkit-text-size-adjust: 100%;" width=3D"100%" class=3D"mcnTextContent=
Container">
                    <tbody><tr>

                        <td valign=3D"top" class=3D"mcnTextContent" style=
=3D"padding-top: 0;padding-right: 18px;padding-bottom: 9px;padding-left: 1=
8px;mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust: 100%=
;-webkit-text-size-adjust: 100%;color: #606060;font-family: Helvetica;font=
-size: 15px;line-height: 150%;text-align: left;">

                            <a href=3D"https://acolyer.us9.list-manage.com=
/track/click?u=3D4188b6afbe9e5d43111fef4d4&id=3D2e947daa80&e=3D1c7444593b=
" target=3D"_blank" style=3D"word-wrap: break-word;-ms-text-size-adjust: 1=
00%;-webkit-text-size-adjust: 100%;color: #6DC6DD;font-weight: normal;text=
-decoration: underline;">This paper write-up is also available online at T=
he Morning Paper.</a>
                        </td>
                    </tr>
                </tbody></table>
=09=09=09=09<!--[if mso]>
=09=09=09=09</td>
=09=09=09=09<![endif]-->

=09=09=09=09<!--[if mso]>
=09=09=09=09</tr>
=09=09=09=09</table>
=09=09=09=09<![endif]-->
            </td>
        </tr>
    </tbody>
</table></td>
                                        </tr>
                                    </table>
                                    <!-- // END HEADER -->
                                </td>
                            </tr>
                            <tr>
                                <td align=3D"center" valign=3D"top" style=
=3D"mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust: 100%=
;-webkit-text-size-adjust: 100%;">
                                    <!-- BEGIN BODY // -->
                                    <table border=3D"0" cellpadding=3D"0"=
 cellspacing=3D"0" width=3D"600" id=3D"templateBody" style=3D"border-colla=
pse: collapse;mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-ad=
just: 100%;-webkit-text-size-adjust: 100%;min-width: 100%;background-color=
: #FFFFFF;border-top: 0;border-bottom: 0;">
                                        <tr>
                                            <td valign=3D"top" class=3D"bo=
dyContainer" style=3D"mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text=
-size-adjust: 100%;-webkit-text-size-adjust: 100%;"><table border=3D"0" ce=
llpadding=3D"0" cellspacing=3D"0" width=3D"100%" class=3D"mcnTextBlock" st=
yle=3D"min-width: 100%;border-collapse: collapse;mso-table-lspace: 0pt;mso=
-table-rspace: 0pt;-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 10=
0%;">
    <tbody class=3D"mcnTextBlockOuter">
        <tr>
            <td valign=3D"top" class=3D"mcnTextBlockInner" style=3D"paddin=
g-top: 9px;mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjus=
t: 100%;-webkit-text-size-adjust: 100%;">
              =09<!--[if mso]>
=09=09=09=09<table align=3D"left" border=3D"0" cellspacing=3D"0" cellpaddi=
ng=3D"0" width=3D"100%" style=3D"width:100%;">
=09=09=09=09<tr>
=09=09=09=09<![endif]-->
=09=09=09
=09=09=09=09<!--[if mso]>
=09=09=09=09<td valign=3D"top" width=3D"600" style=3D"width:600px;">
=09=09=09=09<![endif]-->
                <table align=3D"left" border=3D"0" cellpadding=3D"0" cells=
pacing=3D"0" style=3D"max-width: 100%;min-width: 100%;border-collapse: col=
lapse;mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust: 10=
0%;-webkit-text-size-adjust: 100%;" width=3D"100%" class=3D"mcnTextContent=
Container">
                    <tbody><tr>

                        <td valign=3D"top" class=3D"mcnTextContent" style=
=3D"padding-top: 0;padding-right: 18px;padding-bottom: 9px;padding-left: 1=
8px;mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust: 100%=
;-webkit-text-size-adjust: 100%;color: #606060;font-family: Helvetica;font=
-size: 15px;line-height: 150%;text-align: left;">

                            <style type=3D"text/css">blockquote {
    display: block;
    padding: 20px 20px 10px 45px;
    margin: 20px 0px;
    font-style: italic;
    font-size: 14px;
    color: #141310;
    background: url("blog.acolyer.org/wp-content/themes/pub/vigilance/imag=
es/blockquote.gif") no-repeat scroll left top #E7E6E2;
}
</style>
<h1 style=3D"margin: 0;padding: 0;display: block;font-family: Helvetica;fo=
nt-size: 40px;font-style: normal;font-weight: bold;line-height: 125%;lette=
r-spacing: -1px;text-align: left;color: #606060 !important;">the morning p=
aper</h1>

<h2 id=3D"clay-codes-moulding-mds-codes-to-yield-an-msr-code" style=3D"mar=
gin: 0;padding: 0;display: block;font-family: Helvetica;font-size: 26px;fo=
nt-style: normal;font-weight: bold;line-height: 125%;letter-spacing: -.75p=
x;text-align: left;color: #404040 !important;">Clay codes: moulding MDS co=
des to yield an MSR code</h2>
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;"><a href=3D"https://acolyer.us9.list-=
manage.com/track/click?u=3D4188b6afbe9e5d43111fef4d4&id=3Dd5bfa405af&e=3D=
1c7444593b" style=3D"word-wrap: break-word;-ms-text-size-adjust: 100%;-web=
kit-text-size-adjust: 100%;color: #6DC6DD;font-weight: normal;text-decorat=
ion: underline;">Clay codes: moulding MDS codes to yield an MSR code</a> V=
ajha et al.=2C <em>FAST=E2=80=9918</em></p>
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">As we know=2C storage fails (or the=
 nodes to which it is directly attached=2C which amounts to pretty much th=
e same thing). Assuming we can detect the failure=2C we need to recover fr=
om it. In order to be able to recover=2C we need to have redundant informa=
tion stored outside of the failure zone. There are a number of factors to=
 consider in any scheme=2C for example:</p>
<ul>
<li style=3D"-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;">W=
hat is the storage overhead? (E.g.=2C in a straightforward n=3D3 replicati=
on scheme=2C we need 3x the original storage!).</li>
<li style=3D"-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;">H=
ow long does it take to recover missing data? (Reading from disk=2C transf=
erring over the network=2C imputing the missing bytes if using a coding sc=
heme).</li>
<li style=3D"-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;">W=
hat resources does it consume during recovery? (E.g.=2C does it saturate n=
etwork bandwidth?)</li>
</ul>
<blockquote style=3D"-ms-text-size-adjust: 100%;-webkit-text-size-adjust:=
 100%;display: block;padding: 20px 20px 10px 45px;margin: 20px 0px;font-st=
yle: italic;font-size: 14px;color: #141310;background: url(blog.acolyer.or=
g/wp-content/themes/pub/vigilance/images/blockquote.gif) no-repeat scroll=
 left top #E7E6E2;">
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">In order to be failure tolerant=2C d=
ata centers have increasingly started to adopt erasure codes in place of r=
eplication. A class of erasure codes known as maximum distance separable (=
MDS) codes offer the same level of failure tolerance as replication codes=
 with minimal storage overhead. For example=2C Facebook reported reduced s=
torage overhead of 1.4x by using Reed-Solomon codes=2C a popular class of=
 MDS codes=2C as opposed to the storage overhead of 3x incurred in triple=
 replication.</p>
</blockquote>
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">(See =E2=80=98<a href=3D"https://aco=
lyer.us9.list-manage.com/track/click?u=3D4188b6afbe9e5d43111fef4d4&id=3Db1=
d31215ea&e=3D1c7444593b" style=3D"word-wrap: break-word;-ms-text-size-adj=
ust: 100%;-webkit-text-size-adjust: 100%;color: #6DC6DD;font-weight: norma=
l;text-decoration: underline;">f4: Facebook=E2=80=99s warm blob storage sy=
stem</a>=2C=E2=80=99 and =E2=80=98<a href=3D"https://acolyer.us9.list-mana=
ge.com/track/click?u=3D4188b6afbe9e5d43111fef4d4&id=3De0fc3b148b&e=3D=
1c7444593b" style=3D"word-wrap: break-word;-ms-text-size-adjust: 100%;-webkit-=
text-size-adjust: 100%;color: #6DC6DD;font-weight: normal;text-decoration:=
 underline;">A hitchhiker=E2=80=99s guide to fast and efficient data recon=
struction in erasure coded data centers</a>=E2=80=99).</p>
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">A class of erasure codes known as <e=
m>minimum storage regenerating</em> (MSR) codes offer the advantaged of MD=
S codes=2C but with lesser repair bandwidth (the Achilles=E2=80=99 heel of=
 MDS). Until <a href=3D"https://acolyer.us9.list-manage.com/track/click?u=
=3D4188b6afbe9e5d43111fef4d4&id=3Dd4dcd42b89&e=3D1c7444593b" style=3D"wor=
d-wrap: break-word;-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 10=
0%;color: #6DC6DD;font-weight: normal;text-decoration: underline;">Ye and=
 Barg</a> though=2C no-one had shown a theoretical construction of an MSR=
 code meeting all the requirements of real-world systems.</p>
<blockquote style=3D"-ms-text-size-adjust: 100%;-webkit-text-size-adjust:=
 100%;display: block;padding: 20px 20px 10px 45px;margin: 20px 0px;font-st=
yle: italic;font-size: 14px;color: #141310;background: url(blog.acolyer.or=
g/wp-content/themes/pub/vigilance/images/blockquote.gif) no-repeat scroll=
 left top #E7E6E2;">
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">This paper presents Clay codes that=
 extend the theoretical construction presented in Ye and Barg=2C with prac=
tical considerations. We implement Clay and make it available as open-sour=
ce under LGPL.</p>
</blockquote>
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">Clay (<em>Coupled Layer</em>) codes=
 have a number of properties that make them attractive:</p>
<ul>
<li style=3D"-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;">L=
ow storage overhead</li>
<li style=3D"-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;">O=
ptimal repair bandwidth</li>
<li style=3D"-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;">O=
ptimal disk I/O</li>
<li style=3D"-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;">O=
ptimal sub-packetization level (we=E2=80=99ll look at what that is later)<=
/li>
<li style=3D"-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;">U=
niform repair performance of data and parity nodes</li>
<li style=3D"-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;">S=
upport for both single and multiple-node repairs=2C while permitting faste=
r and more efficient repair.</li>
</ul>
<blockquote style=3D"-ms-text-size-adjust: 100%;-webkit-text-size-adjust:=
 100%;display: block;padding: 20px 20px 10px 45px;margin: 20px 0px;font-st=
yle: italic;font-size: 14px;color: #141310;background: url(blog.acolyer.or=
g/wp-content/themes/pub/vigilance/images/blockquote.gif) no-repeat scroll=
 left top #E7E6E2;">
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">A natural question to ask is if thes=
e impressive theoretical credentials of the Clay code result in matching p=
ractical performance. We answer this question in the affirmative here by s=
tudying the real-world performance of the Clay code in at Ceph setting=2C=
 with respect to network traffic for repair=2C disk I/O during repair=2C r=
epair time=2C and degraded I/O performance.</p>
</blockquote>
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">A Clay code with storage overhead 1.=
25x reduced repair network traffic=2C disk read=2C and repair times by 2.9=
x=2C 3.4x=2C and 3x respectively. Could we be about to see an industry shi=
ft towards adoption of Clay codes? The paper describes the integration int=
o Ceph and the subsequent evaluation=2C but I=E2=80=99m going to focus my=
 limited space here on trying to explain how Clay codes work. First=2C a l=
ittle background on erasure codes=2C MDS=2C and MSR.</p>
<h3 id=3D"erasure-code-preliminaries" style=3D"margin: 0;padding: 0;displa=
y: block;font-family: Helvetica;font-size: 18px;font-style: normal;font-we=
ight: bold;line-height: 125%;letter-spacing: -.5px;text-align: left;color:=
 #606060 !important;">Erasure code preliminaries</h3>
<blockquote style=3D"-ms-text-size-adjust: 100%;-webkit-text-size-adjust:=
 100%;display: block;padding: 20px 20px 10px 45px;margin: 20px 0px;font-st=
yle: italic;font-size: 14px;color: #141310;background: url(blog.acolyer.or=
g/wp-content/themes/pub/vigilance/images/blockquote.gif) no-repeat scroll=
 left top #E7E6E2;">
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">Erasure codes are an alternative to=
 replication for ensuring failure tolerance in data storage. In an [n=2Ck=
] erasure-coded system=2C data pertaining to an object is first divided in=
to <em>k</em> data chunk and then encoded to obtain <em>m =3D n-k</em> par=
ity chunks.</p>
</blockquote>
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">After encoding=2C the <em>n</em> cod=
ed chunks (data + parity) are stored on <em>n</em> distinct nodes. In <em>=
scalar codes</em> one byte from each of the <em>k</em> data chunks is pick=
ed=2C and the <em>k</em> bytes are linearly combined in <em>m</em> differe=
nt ways=2C to obtain <em>m</em> parity bytes. The resulting set of <em>n=
 =3D k + m</em> bytes is called a <em>codeword</em>.</p>
<div class=3D"figure">
<img src=3D"https://adriancolyer.files.wordpress.com/2018/02/clay-codes-fi=
g-1.jpeg?w=3D420" style=3D"border: 0;outline: none;text-decoration: none;-=
ms-interpolation-mode: bicubic;height: auto !important;">

</div>
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">In vector codes=2C instead of workin=
g with a single byte at a time from each data chunk=2C we work with ordere=
d collections of <img style=3D"vertical-align: middle;border: 0;outline: n=
one;text-decoration: none;-ms-interpolation-mode: bicubic;height: auto !im=
portant;" src=3D"https://latex.codecogs.com/png.latex?%5Calpha" alt=3D"\al=
pha" title=3D"\alpha"> bytes. These collections are called <em>superbytes<=
/em>. The superbytes are then linearly combined as before to obtain <em>m<=
/em> parity bytes. (So a scalar code is just a vector code with <img style=
=3D"vertical-align: middle;border: 0;outline: none;text-decoration: none;-=
ms-interpolation-mode: bicubic;height: auto !important;" src=3D"https://la=
tex.codecogs.com/png.latex?%5Calpha%20%3D%201" alt=3D"\alpha =3D 1" title=
=3D"\alpha =3D 1">).</p>
<div class=3D"figure">
<img src=3D"https://adriancolyer.files.wordpress.com/2018/02/clay-codes-fi=
g-2.jpeg?w=3D420" style=3D"border: 0;outline: none;text-decoration: none;-=
ms-interpolation-mode: bicubic;height: auto !important;">

</div>
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">If the number of bytes in a data chu=
nk is L=2C then we will have <img style=3D"vertical-align: middle;border:=
 0;outline: none;text-decoration: none;-ms-interpolation-mode: bicubic;hei=
ght: auto !important;" src=3D"https://latex.codecogs.com/png.latex?N%20%3D=
%20L%2F%5Calpha" alt=3D"N =3D L/\alpha" title=3D"N =3D L/\alpha"> codeword=
s. The number of bytes=2C<img style=3D"vertical-align: middle;border: 0;ou=
tline: none;text-decoration: none;-ms-interpolation-mode: bicubic;height:=
 auto !important;" src=3D"https://latex.codecogs.com/png.latex?%5Calpha" a=
lt=3D"\alpha" title=3D"\alpha">=2C within a superbyte is called the <em>su=
b-packetization level</em> of the code. Operations are carried out in para=
llel across multiple codewords. Especially when <img style=3D"vertical-ali=
gn: middle;border: 0;outline: none;text-decoration: none;-ms-interpolation=
-mode: bicubic;height: auto !important;" src=3D"https://latex.codecogs.com=
/png.latex?%5Calpha" alt=3D"\alpha" title=3D"\alpha"> is large=2C it becom=
es more efficient therefore to <em>contiguously</em> store the correspondi=
ng bytes from different superbytes. In this way=2C each data chunk becomes=
 partitioned into <img style=3D"vertical-align: middle;border: 0;outline:=
 none;text-decoration: none;-ms-interpolation-mode: bicubic;height: auto !=
important;" src=3D"https://latex.codecogs.com/png.latex?%5Calpha" alt=3D"\=
alpha" title=3D"\alpha"> subsets=2C called <em>sub-chunks</em>.</p>
<div class=3D"figure">
<img src=3D"https://adriancolyer.files.wordpress.com/2018/02/clay-codes-fi=
g-3.jpeg?w=3D520" style=3D"border: 0;outline: none;text-decoration: none;-=
ms-interpolation-mode: bicubic;height: auto !important;">

</div>
<blockquote style=3D"-ms-text-size-adjust: 100%;-webkit-text-size-adjust:=
 100%;display: block;padding: 20px 20px 10px 45px;margin: 20px 0px;font-st=
yle: italic;font-size: 14px;color: #141310;background: url(blog.acolyer.or=
g/wp-content/themes/pub/vigilance/images/blockquote.gif) no-repeat scroll=
 left top #E7E6E2;">
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">The sub-class of (n=2Ck) erasure cod=
es=2C either scalar or vector=2C have the property that they can recovery=
 from the failure of any (n-k) nodes are called MDS (<em>maximum distance=
 separable</em>) codes. For a fixed <em>k</em>=2C these codes have the sma=
llest storage overhead <em>n/k</em> among any of the erasure codes that ca=
n recover from a failure of a fixed number of <em>n-k</em> nodes.</p>
</blockquote>
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;"><a href=3D"https://acolyer.us9.list-=
manage.com/track/click?u=3D4188b6afbe9e5d43111fef4d4&id=3Da60e801350&e=3D=
1c7444593b" style=3D"word-wrap: break-word;-ms-text-size-adjust: 100%;-web=
kit-text-size-adjust: 100%;color: #6DC6DD;font-weight: normal;text-decorat=
ion: underline;">Reed-Solomon encoding</a> is a well-known example.</p>
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">In general=2C MDS codes can generate=
 a substantial amount of network traffic during node repair operations. MS=
R (<em>minimum storage regenerating</em>) codes are a subclass of vector-b=
ased MDS codes <em>that have the smallest possible repair bandwidth</em>.=
 To restore a failed node under MSR it is necessary to contact an arbitrar=
ily chosen subset of <em>d</em> helper nodes (<em>d</em> is a design param=
eter between <em>k</em> and <em>n-1</em>). From each of these nodes=2C <im=
g style=3D"vertical-align: middle;border: 0;outline: none;text-decoration:=
 none;-ms-interpolation-mode: bicubic;height: auto !important;" src=3D"htt=
ps://latex.codecogs.com/png.latex?%5Cbeta%20%3D%20%5Calpha%2F%28d-k%2B1%29=
" alt=3D"\beta =3D \alpha/(d-k+1)" title=3D"\beta =3D \alpha/(d-k+1)"> byt=
es need to be downloaded=2C where <img style=3D"vertical-align: middle;bor=
der: 0;outline: none;text-decoration: none;-ms-interpolation-mode: bicubic=
;height: auto !important;" src=3D"https://latex.codecogs.com/png.latex?%5C=
alpha" alt=3D"\alpha" title=3D"\alpha"> is again the sub-packetization lev=
el of the MSR code.</p>
<blockquote style=3D"-ms-text-size-adjust: 100%;-webkit-text-size-adjust:=
 100%;display: block;padding: 20px 20px 10px 45px;margin: 20px 0px;font-st=
yle: italic;font-size: 14px;color: #141310;background: url(blog.acolyer.or=
g/wp-content/themes/pub/vigilance/images/blockquote.gif) no-repeat scroll=
 left top #E7E6E2;">
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">.. the larger the number (n-k) of pa=
rity chunks=2C the greater the reduction in repair traffic.</p>
</blockquote>
<h3 id=3D"clay-codes" style=3D"margin: 0;padding: 0;display: block;font-fa=
mily: Helvetica;font-size: 18px;font-style: normal;font-weight: bold;line-=
height: 125%;letter-spacing: -.5px;text-align: left;color: #606060 !import=
ant;">Clay codes</h3>
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">A Clay code is an MSR code with a nu=
mber of desirable properties as outlined earlier. We=E2=80=99ll build up t=
o the full Clay coding system in stages. Consider a Clay code with paramet=
ers:</p>
<ul>
<li style=3D"-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;"><=
em>(n =3D 4=2C k=3D2)</em> : 4 nodes in total=2C of which 2 are data nodes=
 and 2 are parity nodes</li>
<li style=3D"-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;"><=
em>d =3D 3</em> : we contact 3 helpers during repair</li>
<li style=3D"-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;"><=
img style=3D"vertical-align: middle;border: 0;outline: none;text-decoratio=
n: none;-ms-interpolation-mode: bicubic;height: auto !important;" src=3D"h=
ttps://latex.codecogs.com/png.latex?%28%5Calpha%20%3D%203%2C%20%5Cbeta%20%=
3D%202%29" alt=3D"(\alpha =3D 3=2C \beta =3D 2)" title=3D"(\alpha =3D 3=2C=
 \beta =3D 2)"> : 4 bytes in a superbyte=2C 2 bytes required to be downloa=
ded from each of the helper nodes during repair.</li>
<li style=3D"-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;"><=
em>M =3D 8</em> : 8 <em>data</em> bytes in total in a codeword ( <img styl=
e=3D"vertical-align: middle;border: 0;outline: none;text-decoration: none;=
-ms-interpolation-mode: bicubic;height: auto !important;" src=3D"https://l=
atex.codecogs.com/png.latex?k%20%5Calpha" alt=3D"k \alpha" title=3D"k \alp=
ha"> )</li>
</ul>
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">Take the <em>n =3D 4</em> nodes=2C a=
nd arrange them in a grid indexed by <img style=3D"vertical-align: middle;=
border: 0;outline: none;text-decoration: none;-ms-interpolation-mode: bicu=
bic;height: auto !important;" src=3D"https://latex.codecogs.com/png.latex?=
%28x%2Cy%29" alt=3D"(x=2Cy)" title=3D"(x=2Cy)"> coordinates. Given a singl=
e codeword=2C we could make nodes at (0=2C0) and (1=2C0) store data=2C and=
 nodes at (0=2C1)=2C (1=2C1) store parity information.</p>
<div class=3D"figure">
<img src=3D"https://adriancolyer.files.wordpress.com/2018/02/clay-codes-sk=
etch-1.jpeg?w=3D420" style=3D"border: 0;outline: none;text-decoration: non=
e;-ms-interpolation-mode: bicubic;height: auto !important;">

</div>
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">Now suppose we have four codewords.=
 We could store 4 bytes on each node now=2C giving an <em>uncoupled</em> c=
ode. Each layer still stores a single codeword=2C and the parameter <em>z<=
/em> is used to index codewords. Visually it looks like a data cube where=
 the columns are superbytes and the layers are codewords:</p>
<div class=3D"figure">
<img src=3D"https://adriancolyer.files.wordpress.com/2018/02/clay-codes-sk=
etch-2.jpeg?w=3D360" style=3D"border: 0;outline: none;text-decoration: non=
e;-ms-interpolation-mode: bicubic;height: auto !important;">

</div>
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">Now we can begin to turn this uncoup=
led starting point into a <em>coupled-layer</em>=2C or Clay=2C code. The f=
irst thing we need to do is identify nodes that we=E2=80=99re going to pai=
r=2C and nodes that we=E2=80=99ll leave unpaired. There=E2=80=99s a fairly=
 odd way of doing this (at least I don=E2=80=99t find it intuitive)=2C but=
 let=E2=80=99s roll with it...</p>
<ul>
<li style=3D"-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;">T=
ake the z values (0=2C1=2C2=2C3) and represent them in binary as the digit=
s <img style=3D"vertical-align: middle;border: 0;outline: none;text-decora=
tion: none;-ms-interpolation-mode: bicubic;height: auto !important;" src=
=3D"https://latex.codecogs.com/png.latex?z_0%2C%20z_1" alt=3D"z_0=2C z_1"=
 title=3D"z_0=2C z_1"> (so e.g. z=3D2 will be 1=2C0)</li>
<li style=3D"-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;">T=
ake the (x=2Cy) coordinates of a node=2C and colour it red if <img style=
=3D"vertical-align: middle;border: 0;outline: none;text-decoration: none;-=
ms-interpolation-mode: bicubic;height: auto !important;" src=3D"https://la=
tex.codecogs.com/png.latex?x%20%3D%20z_y" alt=3D"x =3D z_y" title=3D"x =3D=
 z_y"> (i.e.=2C use the value of y to index into the z digits=2C and check=
 to see whether the value you find there equals <em>x</em>).</li>
</ul>
<div class=3D"figure">
<img src=3D"https://adriancolyer.files.wordpress.com/2018/02/clay-codes-sk=
etch-3.jpeg?w=3D520" style=3D"border: 0;outline: none;text-decoration: non=
e;-ms-interpolation-mode: bicubic;height: auto !important;">

</div>
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">Red nodes will be unpaired. Let <img=
 style=3D"vertical-align: middle;border: 0;outline: none;text-decoration:=
 none;-ms-interpolation-mode: bicubic;height: auto !important;" src=3D"htt=
ps://latex.codecogs.com/png.latex?p%20%3D%20%28x%2Cy%2Cz%29" alt=3D"p =3D=
 (x=2Cy=2Cz)" title=3D"p =3D (x=2Cy=2Cz)">.</p>
<blockquote style=3D"-ms-text-size-adjust: 100%;-webkit-text-size-adjust:=
 100%;display: block;padding: 20px 20px 10px 45px;margin: 20px 0px;font-st=
yle: italic;font-size: 14px;color: #141310;background: url(blog.acolyer.or=
g/wp-content/themes/pub/vigilance/images/blockquote.gif) no-repeat scroll=
 left top #E7E6E2;">
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">The Clay code associates a byte C(p)=
 with each vertex <em>p</em> of the data cube just as does the uncoupled c=
ode U. The bytes U(p) and C(p) are related in a simple manner. If <em>p</e=
m> corresponds to an unpaired (and hence colored in red) vertex=2C we simp=
ly set C(p) =3D U(p)...</p>
</blockquote>
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">The remaining nodes are paired off=
=2C based on shared y-values=2C becoming <em>companion vertices</em>.</p>
<div class=3D"figure">
<img src=3D"https://adriancolyer.files.wordpress.com/2018/02/clay-codes-sk=
etch-4.jpeg?w=3D360" style=3D"border: 0;outline: none;text-decoration: non=
e;-ms-interpolation-mode: bicubic;height: auto !important;">

</div>
<blockquote style=3D"-ms-text-size-adjust: 100%;-webkit-text-size-adjust:=
 100%;display: block;padding: 20px 20px 10px 45px;margin: 20px 0px;font-st=
yle: italic;font-size: 14px;color: #141310;background: url(blog.acolyer.or=
g/wp-content/themes/pub/vigilance/images/blockquote.gif) no-repeat scroll=
 left top #E7E6E2;">
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">If (p=2Cp*) are a pair of companion=
 vertices=2C <img style=3D"vertical-align: middle;border: 0;outline: none;=
text-decoration: none;-ms-interpolation-mode: bicubic;height: auto !import=
ant;" src=3D"https://latex.codecogs.com/png.latex?p%20%5Cneq%20p%5E%2A" al=
t=3D"p \neq p^*" title=3D"p \neq p^*">=2C <img style=3D"vertical-align: mi=
ddle;border: 0;outline: none;text-decoration: none;-ms-interpolation-mode:=
 bicubic;height: auto !important;" src=3D"https://latex.codecogs.com/png.l=
atex?U%28p%29" alt=3D"U(p)" title=3D"U(p)">=2C <img style=3D"vertical-alig=
n: middle;border: 0;outline: none;text-decoration: none;-ms-interpolation-=
mode: bicubic;height: auto !important;" src=3D"https://latex.codecogs.com/=
png.latex?U%5E%2A%28p%29" alt=3D"U^*(p)" title=3D"U^*(p)"> and <img style=
=3D"vertical-align: middle;border: 0;outline: none;text-decoration: none;-=
ms-interpolation-mode: bicubic;height: auto !important;" src=3D"https://la=
tex.codecogs.com/png.latex?C%28p%29" alt=3D"C(p)" title=3D"C(p)">=2C <img=
 style=3D"vertical-align: middle;border: 0;outline: none;text-decoration:=
 none;-ms-interpolation-mode: bicubic;height: auto !important;" src=3D"htt=
ps://latex.codecogs.com/png.latex?C%5E%2A%28p%29" alt=3D"C^*(p)" title=3D"=
C^*(p)"> are related by the following pairwise forward transform (PFT):</p=
>
</blockquote>
<div class=3D"figure">
<img src=3D"https://adriancolyer.files.wordpress.com/2018/02/clay-codes-eq=
n-1.jpeg?w=3D420" style=3D"border: 0;outline: none;text-decoration: none;-=
ms-interpolation-mode: bicubic;height: auto !important;">

</div>
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">To go in the other direction=2C we c=
an use a pairwise reverse transform (PRT):</p>
<div class=3D"figure">
<img src=3D"https://adriancolyer.files.wordpress.com/2018/02/clay-codes-eq=
n-2.jpeg?w=3D420" style=3D"border: 0;outline: none;text-decoration: none;-=
ms-interpolation-mode: bicubic;height: auto !important;">

</div>
<div class=3D"figure">
<img src=3D"https://adriancolyer.files.wordpress.com/2018/02/clay-codes-fi=
g-7.jpeg?w=3D480" style=3D"border: 0;outline: none;text-decoration: none;-=
ms-interpolation-mode: bicubic;height: auto !important;">

</div>
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">Finally=2C given this setup=2C Clay=
 encoding proceeds as follows:</p>
<div class=3D"figure">
<img src=3D"https://adriancolyer.files.wordpress.com/2018/02/clay-codes-fi=
g-8.jpeg?w=3D520" style=3D"border: 0;outline: none;text-decoration: none;-=
ms-interpolation-mode: bicubic;height: auto !important;">

</div>
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">Suppose we now have a node failure=
=2C losing the dotted column in figure 9 below:</p>
<div class=3D"figure">
<img src=3D"https://adriancolyer.files.wordpress.com/2018/02/clay-codes-fi=
g-9.jpeg?w=3D320" style=3D"border: 0;outline: none;text-decoration: none;-=
ms-interpolation-mode: bicubic;height: auto !important;">

</div>
<blockquote style=3D"-ms-text-size-adjust: 100%;-webkit-text-size-adjust:=
 100%;display: block;padding: 20px 20px 10px 45px;margin: 20px 0px;font-st=
yle: italic;font-size: 14px;color: #141310;background: url(blog.acolyer.or=
g/wp-content/themes/pub/vigilance/images/blockquote.gif) no-repeat scroll=
 left top #E7E6E2;">
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">To repair the node=2C only the two l=
ayers z =3D (1=2C0) and z =3D (1=2C1) corresponding to the presence of the=
 red dots within the dotted column are called upon for node repair. Thus e=
ach helper node contributes only 2 bytes=2C as opposed to 4 in an RS code=
=2C towards node repair and this explains the savings in repair bandwidth.=
</p>
</blockquote>
<div class=3D"figure">
<img src=3D"https://adriancolyer.files.wordpress.com/2018/02/clay-codes-fi=
g-11.jpeg?w=3D520" style=3D"border: 0;outline: none;text-decoration: none;=
-ms-interpolation-mode: bicubic;height: auto !important;">

</div>
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">If there are multiple node failures=
 (but no more than <em>n-k</em>)=2C decoding can be carried out sequential=
ly layer by layer to correct the erasure. Layers are processed in increasi=
ng order of the number of missing red dots within a layer. See the followi=
ng figure for a succinct explanation.</p>
<div class=3D"figure">
<img src=3D"https://adriancolyer.files.wordpress.com/2018/02/clay-codes-fi=
g-12.jpeg?w=3D520" style=3D"border: 0;outline: none;text-decoration: none;=
-ms-interpolation-mode: bicubic;height: auto !important;">

</div>
<h3 id=3D"the-last-word" style=3D"margin: 0;padding: 0;display: block;font=
-family: Helvetica;font-size: 18px;font-style: normal;font-weight: bold;li=
ne-height: 125%;letter-spacing: -.5px;text-align: left;color: #606060 !imp=
ortant;">The last word</h3>
<blockquote style=3D"-ms-text-size-adjust: 100%;-webkit-text-size-adjust:=
 100%;display: block;padding: 20px 20px 10px 45px;margin: 20px 0px;font-st=
yle: italic;font-size: 14px;color: #141310;background: url(blog.acolyer.or=
g/wp-content/themes/pub/vigilance/images/blockquote.gif) no-repeat scroll=
 left top #E7E6E2;">
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">Clay codes can be constructed via a=
 simple two-step process where one first stacks in layers=2C <img style=3D=
"vertical-align: middle;border: 0;outline: none;text-decoration: none;-ms-=
interpolation-mode: bicubic;height: auto !important;" src=3D"https://latex=
=2Ecodecogs.com/png.latex?%5Calpha" alt=3D"\alpha" title=3D"\alpha"> codewor=
ds=2C drawn from an MDS code; in the next step=2C elements from different=
 layers are paired and transformed to yield the Clay code. The same constr=
uction with minor modifications is shown to offer support for handling mul=
tiple erasures as well. It is our belief that Clay codes are well-poised t=
o make the leap from theory to practice.</p>
</blockquote>
<p style=3D"margin: 1em 0;padding: 0;-ms-text-size-adjust: 100%;-webkit-te=
xt-size-adjust: 100%;color: #606060;font-family: Helvetica;font-size: 15px=
;line-height: 150%;text-align: left;">See the full paper for details of th=
e implementation in Ceph and the experimental evaluation=2C which I didn=
=E2=80=99t have space to cover here.</p>


                        </td>
                    </tr>
                </tbody></table>
=09=09=09=09<!--[if mso]>
=09=09=09=09</td>
=09=09=09=09<![endif]-->

=09=09=09=09<!--[if mso]>
=09=09=09=09</tr>
=09=09=09=09</table>
=09=09=09=09<![endif]-->
            </td>
        </tr>
    </tbody>
</table><table border=3D"0" cellpadding=3D"0" cellspacing=3D"0" width=3D"1=
00%" class=3D"mcnShareBlock" style=3D"min-width: 100%;border-collapse: col=
lapse;mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust: 10=
0%;-webkit-text-size-adjust: 100%;">
    <tbody class=3D"mcnShareBlockOuter">
            <tr>
                <td valign=3D"top" style=3D"padding: 9px;mso-table-lspace:=
 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust: 100%;-webkit-text-size-ad=
just: 100%;" class=3D"mcnShareBlockInner">
                    <table border=3D"0" cellpadding=3D"0" cellspacing=3D"0=
" width=3D"100%" class=3D"mcnShareContentContainer" style=3D"min-width: 10=
0%;border-collapse: collapse;mso-table-lspace: 0pt;mso-table-rspace: 0pt;-=
ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;">
    <tbody><tr>
        <td align=3D"left" style=3D"padding-top: 0;padding-left: 9px;paddi=
ng-bottom: 0;padding-right: 9px;mso-table-lspace: 0pt;mso-table-rspace: 0p=
t;-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;">
            <table align=3D"left" border=3D"0" cellpadding=3D"0" cellspaci=
ng=3D"0" width=3D"100%" style=3D"min-width: 100%;background-color: #FAFAFA=
;border: 1px solid #EEEEEE;border-collapse: collapse;mso-table-lspace: 0pt=
;mso-table-rspace: 0pt;-ms-text-size-adjust: 100%;-webkit-text-size-adjust=
: 100%;" class=3D"mcnShareContent">
                <tbody><tr>
                    <td align=3D"left" valign=3D"top" class=3D"mcnShareCon=
tentItemContainer" style=3D"padding-top: 9px;padding-right: 9px;padding-le=
ft: 9px;mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust:=
 100%;-webkit-text-size-adjust: 100%;">
                        <table align=3D"left" border=3D"0" cellpadding=3D"=
0" cellspacing=3D"0" style=3D"border-collapse: collapse;mso-table-lspace:=
 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust: 100%;-webkit-text-size-ad=
just: 100%;">
                            <tbody><tr>
                                <td align=3D"left" valign=3D"top" style=3D=
"mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust: 100%;-w=
ebkit-text-size-adjust: 100%;">
                                    <!--[if mso]>
                                    <table align=3D"left" border=3D"0" cel=
lspacing=3D"0" cellpadding=3D"0">
                                    <tr>
                                    <![endif]-->

                                        <!--[if mso]>
                                        <td align=3D"center" valign=3D"top=
">
                                        <![endif]-->
                                        <table align=3D"left" border=3D"0"=
 cellpadding=3D"0" cellspacing=3D"0" style=3D"border-collapse: collapse;ms=
o-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust: 100%;-webk=
it-text-size-adjust: 100%;">
                                            <tbody><tr>
                                                <td valign=3D"top" style=
=3D"padding-right: 0;padding-bottom: 9px;mso-table-lspace: 0pt;mso-table-r=
space: 0pt;-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;" cla=
ss=3D"mcnShareContentItemContainer">
                                                    <table border=3D"0" ce=
llpadding=3D"0" cellspacing=3D"0" width=3D"" class=3D"mcnShareContentItem"=
 style=3D"border-collapse: separate;background-color: #FAFAFA;border: 1px=
 solid #CCCCCC;border-radius: 5px;mso-table-lspace: 0pt;mso-table-rspace:=
 0pt;-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;">
                                                        <tbody><tr>
                                                            <td align=3D"l=
eft" valign=3D"middle" style=3D"padding-top: 5px;padding-right: 9px;paddin=
g-bottom: 5px;padding-left: 9px;mso-table-lspace: 0pt;mso-table-rspace: 0p=
t;-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;">
                                                                <table ali=
gn=3D"left" border=3D"0" cellpadding=3D"0" cellspacing=3D"0" width=3D"" st=
yle=3D"border-collapse: collapse;mso-table-lspace: 0pt;mso-table-rspace: 0=
pt;-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;">
                                                                    <tbody=
><tr>
                                                                        <t=
d align=3D"center" valign=3D"middle" width=3D"24" class=3D"mcnShareIconCon=
tent" style=3D"mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-a=
djust: 100%;-webkit-text-size-adjust: 100%;">
                                                                         =
   <a href=3D"https://acolyer.us9.list-manage.com/track/click?u=3D4188b6af=
be9e5d43111fef4d4&id=3D38f03274e6&e=3D1c7444593b" target=3D"_blank" style=
=3D"word-wrap: break-word;-ms-text-size-adjust: 100%;-webkit-text-size-adj=
ust: 100%;"><img src=3D"https://cdn-images.mailchimp.com/icons/social-bloc=
k-v2/color-twitter-48.png" style=3D"display: block;border: 0;outline: none=
;text-decoration: none;-ms-interpolation-mode: bicubic;" height=3D"24" wid=
th=3D"24" class=3D""></a>
                                                                        </=
td>
                                                                        <t=
d align=3D"left" valign=3D"middle" class=3D"mcnShareTextContent" style=3D"=
padding-left: 5px;mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-siz=
e-adjust: 100%;-webkit-text-size-adjust: 100%;">
                                                                         =
   <a href=3D"https://acolyer.us9.list-manage.com/track/click?u=3D4188b6af=
be9e5d43111fef4d4&id=3Dcda955461f&e=3D1c7444593b" target=3D"" style=3D"co=
lor: #505050;font-family: Arial;font-size: 12px;font-weight: normal;line-h=
eight: 100%;text-align: center;text-decoration: none;word-wrap: break-word=
;-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;">Tweet</a>
                                                                        </=
td>
                                                                    </tr>
                                                                </tbody></=
table>
                                                            </td>
                                                        </tr>
                                                    </tbody></table>
                                                </td>
                                            </tr>
                                        </tbody></table>
                                        <!--[if mso]>
                                        </td>
                                        <![endif]-->

                                    <!--[if mso]>
                                    </tr>
                                    </table>
                                    <![endif]-->
                                </td>
                            </tr>
                        </tbody></table>
                    </td>
                </tr>
            </tbody></table>
        </td>
    </tr>
</tbody></table>

                </td>
            </tr>
    </tbody>
</table><table border=3D"0" cellpadding=3D"0" cellspacing=3D"0" width=3D"1=
00%" class=3D"mcnBoxedTextBlock" style=3D"min-width: 100%;border-collapse:=
 collapse;mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust=
: 100%;-webkit-text-size-adjust: 100%;">
    <!--[if gte mso 9]>
=09<table align=3D"center" border=3D"0" cellspacing=3D"0" cellpadding=3D"0=
" width=3D"100%">
=09<![endif]-->
=09<tbody class=3D"mcnBoxedTextBlockOuter">
        <tr>
            <td valign=3D"top" class=3D"mcnBoxedTextBlockInner" style=3D"m=
so-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust: 100%;-web=
kit-text-size-adjust: 100%;">

=09=09=09=09<!--[if gte mso 9]>
=09=09=09=09<td align=3D"center" valign=3D"top" ">
=09=09=09=09<![endif]-->
                <table align=3D"left" border=3D"0" cellpadding=3D"0" cells=
pacing=3D"0" width=3D"100%" style=3D"min-width: 100%;border-collapse: coll=
apse;mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust: 100=
%;-webkit-text-size-adjust: 100%;" class=3D"mcnBoxedTextContentContainer">
                    <tbody><tr>

                        <td style=3D"padding-top: 9px;padding-left: 18px;p=
adding-bottom: 9px;padding-right: 18px;mso-table-lspace: 0pt;mso-table-rsp=
ace: 0pt;-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;">

                            <table border=3D"0" cellspacing=3D"0" class=3D=
"mcnTextContentContainer" width=3D"100%" style=3D"min-width: 100% !importa=
nt;background-color: #EBEBEB;border: 1px solid #999999;border-collapse: co=
llapse;mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust: 1=
00%;-webkit-text-size-adjust: 100%;">
                                <tbody><tr>
                                    <td valign=3D"top" class=3D"mcnTextCon=
tent" style=3D"padding: 18px;mso-table-lspace: 0pt;mso-table-rspace: 0pt;-=
ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;color: #606060;fo=
nt-family: Helvetica;font-size: 15px;line-height: 150%;text-align: left;">
                                        This email was brought to you by <=
a href=3D"https://acolyer.us9.list-manage.com/track/click?u=3D4188b6afbe9e=
5d43111fef4d4&id=3D56b282f426&e=3D1c7444593b" target=3D"_blank" style=3D"=
word-wrap: break-word;-ms-text-size-adjust: 100%;-webkit-text-size-adjust:=
 100%;color: #6DC6DD;font-weight: normal;text-decoration: underline;">#the=
morningpaper</a>: an interesting/influential/important paper from the worl=
d of CS every weekday morning=2C as selected by Adrian Colyer
                                    </td>
                                </tr>
                            </tbody></table>
                        </td>
                    </tr>
                </tbody></table>
=09=09=09=09<!--[if gte mso 9]>
=09=09=09=09</td>
=09=09=09=09<![endif]-->

=09=09=09=09<!--[if gte mso 9]>
                </tr>
                </table>
=09=09=09=09<![endif]-->
            </td>
        </tr>
    </tbody>
</table></td>
                                        </tr>
                                    </table>
                                    <!-- // END BODY -->
                                </td>
                            </tr>
                            <tr>
                                <td align=3D"center" valign=3D"top" style=
=3D"mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust: 100%=
;-webkit-text-size-adjust: 100%;">
                                    <!-- BEGIN FOOTER // -->
                                    <table border=3D"0" cellpadding=3D"0"=
 cellspacing=3D"0" width=3D"600" id=3D"templateFooter" style=3D"border-col=
lapse: collapse;mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-=
adjust: 100%;-webkit-text-size-adjust: 100%;min-width: 100%;background-col=
or: #FFFFFF;border-top: 0;border-bottom: 0;">
                                        <tr>
                                            <td valign=3D"top" class=3D"fo=
oterContainer" style=3D"padding-bottom: 9px;mso-table-lspace: 0pt;mso-tabl=
e-rspace: 0pt;-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;">=
<table border=3D"0" cellpadding=3D"0" cellspacing=3D"0" width=3D"100%" cla=
ss=3D"mcnTextBlock" style=3D"min-width: 100%;border-collapse: collapse;mso=
-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust: 100%;-webki=
t-text-size-adjust: 100%;">
    <tbody class=3D"mcnTextBlockOuter">
        <tr>
            <td valign=3D"top" class=3D"mcnTextBlockInner" style=3D"paddin=
g-top: 9px;mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjus=
t: 100%;-webkit-text-size-adjust: 100%;">
              =09<!--[if mso]>
=09=09=09=09<table align=3D"left" border=3D"0" cellspacing=3D"0" cellpaddi=
ng=3D"0" width=3D"100%" style=3D"width:100%;">
=09=09=09=09<tr>
=09=09=09=09<![endif]-->
=09=09=09
=09=09=09=09<!--[if mso]>
=09=09=09=09<td valign=3D"top" width=3D"600" style=3D"width:600px;">
=09=09=09=09<![endif]-->
                <table align=3D"left" border=3D"0" cellpadding=3D"0" cells=
pacing=3D"0" style=3D"max-width: 100%;min-width: 100%;border-collapse: col=
lapse;mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust: 10=
0%;-webkit-text-size-adjust: 100%;" width=3D"100%" class=3D"mcnTextContent=
Container">
                    <tbody><tr>

                        <td valign=3D"top" class=3D"mcnTextContent" style=
=3D"padding-top: 0;padding-right: 18px;padding-bottom: 9px;padding-left: 1=
8px;mso-table-lspace: 0pt;mso-table-rspace: 0pt;-ms-text-size-adjust: 100%=
;-webkit-text-size-adjust: 100%;color: #606060;font-family: Helvetica;font=
-size: 11px;line-height: 125%;text-align: left;">

                            <em>Copyright =C2=A9 2018 One L and a Y Ltd=2C=
 All rights reserved.</em><br>
 You are receiving this email because you opted into email delivery for yo=
ur copy of The Morning Paper.<br>
<br>
<strong>Our mailing address is:</strong><br>
<div class=3D"vcard"><span class=3D"org fn">One L and a Y Ltd</span><div c=
lass=3D"adr"><div class=3D"street-address">Unit 5755</div><div class=3D"ex=
tended-address">PO Box 6945</div><span class=3D"locality">London</span>=2C=
 <span class=3D"region">England</span>  <span class=3D"postal-code">W1A 6U=
S</span> <div class=3D"country-name">United Kingdom</div></div><br><a href=
=3D"//acolyer.us9.list-manage.com/vcard?u=3D4188b6afbe9e5d43111fef4d4&id=
=3Dde5773de0c" class=3D"hcard-download">Add us to your address book</a></d=
iv>
<br>
<br>
<a class=3D"utilityLink" href=3D"https://acolyer.us9.list-manage.com/unsub=
scribe?u=3D4188b6afbe9e5d43111fef4d4&id=3Dde5773de0c&e=3D1c7444593b&c=3D2391=
3f32f8" style=3D"word-wrap: break-word;-ms-text-size-adjust: 100%;-webkit-=
text-size-adjust: 100%;color: #606060;font-weight: normal;text-decoration:=
 underline;">unsubscribe from this list</a>&nbsp;&nbsp;&nbsp; <a class=3D"=
utilityLink" href=3D"https://acolyer.us9.list-manage.com/profile?u=3D4188b=
6afbe9e5d43111fef4d4&id=3Dde5773de0c&e=3D1c7444593b" style=3D"word-wrap: bre=
ak-word;-ms-text-size-adjust: 100%;-webkit-text-size-adjust: 100%;color: #=
606060;font-weight: normal;text-decoration: underline;">update subscriptio=
n preferences</a>&nbsp;<br>
<br>
                        </td>
                    </tr>
                </tbody></table>
=09=09=09=09<!--[if mso]>
=09=09=09=09</td>
=09=09=09=09<![endif]-->

=09=09=09=09<!--[if mso]>
=09=09=09=09</tr>
=09=09=09=09</table>
=09=09=09=09<![endif]-->
            </td>
        </tr>
    </tbody>
</table></td>
                                        </tr>
                                    </table>
                                    <!-- // END FOOTER -->
                                </td>
                            </tr>
                        </table>
                        <!-- // END TEMPLATE -->
                    </td>
                </tr>
            </table>
        </center>
    <img src=3D"https://acolyer.us9.list-manage.com/track/open.php?u=3D418=
8b6afbe9e5d43111fef4d4&id=3D23913f32f8&e=3D1c7444593b" height=3D"1" width=
=3D"1"></body>
</html>
--_----------=_MCPart_280861319--
